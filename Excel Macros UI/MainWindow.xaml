<Controls:MetroWindow x:Class="Excel_Macros_UI.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Excel_Macros_UI"
        xmlns:Controls="http://metro.mahapps.com/winfx/xaml/controls"
        xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
        xmlns:Dialog="clr-namespace:MahApps.Metro.Controls.Dialogs;assembly=MahApps.Metro"
        xmlns:ext="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:dock="http://schemas.xceed.com/wpf/xaml/avalondock"
        xmlns:dockctrl="clr-namespace:Xceed.Wpf.AvalonDock.Controls;assembly=Xceed.Wpf.AvalonDock"
        xmlns:avalonDockProperties="clr-namespace:Xceed.Wpf.AvalonDock.Properties;assembly=Xceed.Wpf.AvalonDock"
        xmlns:avalonDockConverters="clr-namespace:Xceed.Wpf.AvalonDock.Converters;assembly=Xceed.Wpf.AvalonDock"
        xmlns:viewModels="clr-namespace:Excel_Macros_UI.ViewModel"
        xmlns:views="clr-namespace:Excel_Macros_UI.View"
        mc:Ignorable="d" Dialog:DialogParticipation.Register="{Binding}"
        Title="Macro Editor" HorizontalAlignment="Center" VerticalAlignment="Center" ShowIconOnTitleBar="False"
        MinWidth="1024" MinHeight="576" BorderBrush="Black" BorderThickness="0" GlowBrush="Black" ResizeMode="CanResizeWithGrip" 
        Closing="MetroWindow_Closing" SizeChanged="MetroWindow_SizeChanged" Loaded="MainWindow_Loaded" Background="{DynamicResource WindowBackgroundBrush}"
        LeftWindowCommandsOverlayBehavior="Always" RightWindowCommandsOverlayBehavior="Always" WindowButtonCommandsOverlayBehavior="Always">
    
    <!-- Import Resource Dictionary -->
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary x:Name="ThemeDictionary">
                    <ResourceDictionary.MergedDictionaries>
                        <!-- MahApps.Metro resource dictionaries. Make sure that all file names are Case Sensitive! -->
                        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml" />
                        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml" />
                        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Colors.xaml" />

                        <!-- Accent and AppTheme setting -->
                        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/Blue.xaml" />
                        <ResourceDictionary Source="pack://application:,,,/Excel Macros UI;component/ExcelAccent.xaml" />
                        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/BaseLight.xaml" />
                    </ResourceDictionary.MergedDictionaries>
                </ResourceDictionary>
                <ResourceDictionary>
                    <avalonDockConverters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>

                    <Style x:Key="MetroMenuItemStyle" TargetType="{x:Type MenuItem}" BasedOn="{StaticResource MetroMenuItem}">
                        <Setter Property="HorizontalContentAlignment" Value="Left" />
                        <Setter Property="VerticalContentAlignment" Value="Center" />
                        <Setter Property="BorderThickness" Value="0" />
                    </Style>

                    <Style x:Key="MetroContextMenuStyle" TargetType="{x:Type ContextMenu}" BasedOn="{StaticResource MetroContextMenu}">
                        <Setter Property="Background" Value="{DynamicResource ContextMenuBackgroundBrush}" />
                        <Setter Property="BorderThickness" Value="1" />
                        <Setter Property="BorderBrush" Value="{DynamicResource BlackBrush}" />
                    </Style>

                    <ContextMenu x:Key="DocumentContextMenu" Style="{DynamicResource MetroContextMenu}">
                        <MenuItem>Waste</MenuItem>
                        <MenuItem Style="{DynamicResource MetroMenuItem}" Header="{x:Static avalonDockProperties:Resources.Document_Close}" Command="{Binding Path=CloseCommand}" Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}"/>
                        <MenuItem Style="{DynamicResource MetroMenuItem}" Header="{x:Static avalonDockProperties:Resources.Document_CloseAllButThis}" Command="{Binding Path=CloseAllButThisCommand}"/>
                        <MenuItem Style="{DynamicResource MetroMenuItem}" Header="{x:Static avalonDockProperties:Resources.Document_Float}" Command="{Binding Path=FloatCommand}"/>
                        <MenuItem Style="{DynamicResource MetroMenuItem}" Header="{x:Static avalonDockProperties:Resources.Document_DockAsDocument}" Command="{Binding Path=DockAsDocumentCommand}"/>
                        <MenuItem Style="{DynamicResource MetroMenuItem}" Header="{x:Static avalonDockProperties:Resources.Document_NewHorizontalTabGroup}" Command="{Binding Path=NewHorizontalTabGroupCommand}" Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}">
                            <MenuItem.Icon>
                                <Image Source="/AvalonDock.Themes.VS2012;component/Images/HTabGroup.png" Stretch="Uniform" Width="14"/>
                            </MenuItem.Icon>
                        </MenuItem>
                    </ContextMenu>

                    <ContextMenu x:Key="AnchorableContextMenu" Style="{DynamicResource MetroContextMenu}">
                        <MenuItem>Waste</MenuItem>
                        <MenuItem Style="{DynamicResource MetroMenuItem}" Header="{x:Static avalonDockProperties:Resources.Anchorable_Float}" Command="{Binding Path=FloatCommand}"/>
                        <MenuItem Style="{DynamicResource MetroMenuItem}" Header="{x:Static avalonDockProperties:Resources.Anchorable_Dock}" Command="{Binding Path=DockCommand}"/>
                        <MenuItem Style="{DynamicResource MetroMenuItem}" Header="{x:Static avalonDockProperties:Resources.Anchorable_DockAsDocument}" Command="{Binding Path=DockAsDocumentCommand}"/>
                        <MenuItem Style="{DynamicResource MetroMenuItem}" Header="{x:Static avalonDockProperties:Resources.Anchorable_AutoHide}" Command="{Binding Path=AutoHideCommand}"/>
                        <MenuItem Style="{DynamicResource MetroMenuItem}" Header="{x:Static avalonDockProperties:Resources.Anchorable_Hide}" Command="{Binding Path=CloseCommand}" Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}"/>
                    </ContextMenu>
                </ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="2" MinHeight="2" MaxHeight="2" />
            <RowDefinition Height="24" MinHeight="24" MaxHeight="24" />
            <RowDefinition Height="2" MinHeight="2" MaxHeight="2" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <Grid VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Grid.Row="1">
            <Grid.ContextMenu>
                <ContextMenu>
                    <MenuItem x:Name="LightThemeItem" Click="LightThemeItem_Click" Header="Light Theme" />
                    <MenuItem x:Name="DarkThemeItem" Click="DarkThemeItem_Click" Header="Dark Theme" />
                </ContextMenu>
            </Grid.ContextMenu>
            
            <Rectangle HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Fill="{DynamicResource GrayBrush10}" />
        </Grid>

        <dock:DockingManager x:Name="DockingManager_DockManager" Grid.Row="3" Padding="0" Background="{DynamicResource WindowBackgroundBrush}" DataContext="{Binding DockManagerViewModel}" DocumentsSource="{Binding Documents, Mode=TwoWay}" AnchorablesSource="{Binding Tools, Mode=TwoWay}"
                             VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Loaded="DockingManager_DockManager_Loaded" Unloaded="DockingManager_DockManager_Unloaded">

            <dock:DockingManager.Resources>
                <Style TargetType="{x:Type MenuItem}" BasedOn="{StaticResource MetroMenuItem}">
                    <Setter Property="HorizontalContentAlignment" Value="Left" />
                    <Setter Property="VerticalContentAlignment" Value="Center" />
                    <Setter Property="BorderThickness" Value="0" />
                </Style>

                <Style TargetType="{x:Type ContextMenu}" BasedOn="{StaticResource MetroContextMenu}">
                    <Setter Property="Background" Value="{DynamicResource ContextMenuBackgroundBrush}" />
                    <Setter Property="BorderThickness" Value="1" />
                    <Setter Property="BorderBrush" Value="{DynamicResource BlackBrush}" />
                </Style>

                <DataTemplate DataType="{x:Type viewModels:FileExplorerViewModel}">
                    <views:FileExplorerView />
                </DataTemplate>

                <DataTemplate DataType="{x:Type viewModels:ToolboxViewModel}">
                    <views:ToolboxView />
                </DataTemplate>

                <DataTemplate DataType="{x:Type viewModels:ConsoleViewModel}">
                    <views:ConsoleView />
                </DataTemplate>

                <DataTemplate DataType="{x:Type viewModels:TextualEditorViewModel}">
                    <views:TextualEditorView />
                </DataTemplate>

                <DataTemplate DataType="{x:Type viewModels:VisualEditorViewModel}">
                    <views:VisualEditorView />
                </DataTemplate>
            </dock:DockingManager.Resources>

            <dock:DockingManager.LayoutItemContainerStyle>
                <Style TargetType="{x:Type dockctrl:LayoutItem}">
                    <Setter Property="Title" Value="{Binding Model.Title}" />
                    <Setter Property="ContentId" Value="{Binding Model.ContentId}" />
                    <Setter Property="CloseCommand" Value="{Binding Model.CloseCommand}" />
                    <Setter Property="CanClose" Value="{Binding Model.CanClose}" />
                    <Setter Property="CanFloat" Value="{Binding Model.CanFloat}" />
                </Style>
            </dock:DockingManager.LayoutItemContainerStyle>
        </dock:DockingManager>
    </Grid>
</Controls:MetroWindow>
